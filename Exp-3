                                   Experiment 3: NoSQL-CRUD
                                   *************************
                      
1.Write a MongoDB query to create an INVOICE database and collections (CUSTOMER, PRODUCT) and its corresponding documents.
==========================================================================================================================

> use INVOICE

switched to db INVOICE

> db.CUSTOMER.insert({"Name":"Salha","city":"calicut","phno":"9847438967","age":22})
WriteResult({ "nInserted" : 1 })

> db.CUSTOMER.insert({"Name":"Aleefa","city":"kollam","phno":"9544358026","age":21})
WriteResult({ "nInserted" : 1 })

> db.CUSTOMER.insert({"Name":"Aleena","city":"kannur","phno":"9544354438","age":21})
WriteResult({ "nInserted" : 1 })

> db.CUSTOMER.insert({"Name":"Ameena","city":"thrissur","phno":"8547344533","age":23})
WriteResult({ "nInserted" : 1 })

> db.CUSTOMER.insert({"Name":"Ramsi","city":"palakkad","phno":"8545429023","age":20})
WriteResult({ "nInserted" : 1 })
> 



> db.product.insertMany([{"pname":"eraser","price":"3"}, {"pname":"box","price":"35"}, {"pname":"pencil","price":"5"}, {"pname":"book","price":"15"}])

{
	"acknowledged" : true,
	"insertedIds" : [
		ObjectId("64817e49a10548dc9c1dec43"),
		ObjectId("64817e49a10548dc9c1dec44"),
		ObjectId("64817e49a10548dc9c1dec45"),
		ObjectId("64817e49a10548dc9c1dec46")
	]
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 
2. Write a MongoDB query to find all documents from the collection CUSTOMER 
============================================================================

> db.CUSTOMER.find().pretty()
{
	"_id" : ObjectId("648173d7a10548dc9c1dec3b"),
	"Name" : "Aleefa",
	"city" : "alappuzha",
	"phno" : "9544358026",
	"age" : 21
}
{
	"_id" : ObjectId("648173eaa10548dc9c1dec3c"),
	"Name" : "Aleena",
	"city" : "kannur",
	"phno" : "9544354438",
	"age" : 21
}
{
	"_id" : ObjectId("648173f3a10548dc9c1dec3d"),
	"Name" : "Ameena",
	"city" : "thrissur",
	"phno" : "8547344533",
	"age" : 23
}
{
	"_id" : ObjectId("648173fda10548dc9c1dec3e"),
	"Name" : "Ramsi",
	"city" : "palakkad",
	"phno" : "8545429023",
	"age" : 20
}




-------------------------------------------------------------------------------------------------------------------------------------------------------

3.Write a MongoDB query to update the city in the collection CUSTOMER
=====================================================================

> db.CUSTOMER.update({city:"kollam"},{$set:{city:"alappuzha"}})

WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
 
 
 
> db.CUSTOMER.findOne({city:"alappuzha"})
{
	"_id" : ObjectId("648173d7a10548dc9c1dec3b"),
	"Name" : "Aleefa",
	"city" : "alappuzha",
	"phno" : "9544358026",
	"age" : 21
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------

4.Write a MongoDB query to delete the first matched document whose city is “Calicut”.
====================================================================================

> db.CUSTOMER.deleteOne({city:"calicut"}) 

{ "acknowledged" : true, "deletedCount" : 1 }

> db.CUSTOMER.find()

{ "_id" : ObjectId("648173d7a10548dc9c1dec3b"), "Name" : "Aleefa", "city" : "alappuzha", "phno" : "9544358026", "age" : 21 }
{ "_id" : ObjectId("648173eaa10548dc9c1dec3c"), "Name" : "Aleena", "city" : "kannur", "phno" : "9544354438", "age" : 21 }
{ "_id" : ObjectId("648173f3a10548dc9c1dec3d"), "Name" : "Ameena", "city" : "thrissur", "phno" : "8547344533", "age" : 23 }
{ "_id" : ObjectId("648173fda10548dc9c1dec3e"), "Name" : "Ramsi", "city" : "palakkad", "phno" : "8545429023", "age" : 20 }


//VERIFIED
